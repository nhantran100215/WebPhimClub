{"version":3,"sources":["images/icon.png","lib/tool/tool.js","contentApp.js","App.js","index.js"],"names":["CircleProcessBar","percent","this","props","rotate","left","right","border_color","className","style","transform","Component","Home","handleToggleTrendind","x","setState","trendingDay","state","trending","week","day","type","placeholder","popular","map","e","i","id","poster_path","vote_average","title","release_date","part_link","replace","to","src","alt","onClick","color","width","Collection","FAQ","kindOfLink","concateString","kind","time","api_key","App","getAPIMovieArr","a","url","fetch","response","json","datafet","movie","parts","film","original_title","adult","backdrop_path","overview","vote_count","original_language","length","trending1","results","forEach","media_type","genre_ids","name","original_name","first_air_date","popular1","console","log","undefined","upcoming1","upcoming","toprated1","toprated","nowplaying","search","genres","film_collection","HeaderApp","handleWheelAnywhere","deltaY","search_state_check","header_bar","handleClickSearch","search_state","search_icon_suggest","display","wait","headerSuggestAnimationEnd","updateSearchStateCheck","search_keyString","document","addEventListener","removeEventListener","top","Logo","HeaderSearchResult","handleClickOutside","domNode","ReactDOM","findDOMNode","contains","target","handleClickResetSearchResult","onAnimationEnd","slice","ContentApp","exact","path","FooterApp","ReactDom","render","getElementById"],"mappings":"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","file":"static/js/main.ea9945a3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon.d4773499.png\";","import \"./tool.css\";\r\nimport { Component } from \"react\";\r\n\r\nexport class CircleProcessBar extends Component {\r\n  render() {\r\n    let { percent } = this.props;\r\n    let rotate = { left: \"\", right: \"\" };\r\n    if (percent < 50) rotate.right = `rotate(${(percent * 180) / 50}deg)`;\r\n    else {\r\n      rotate.right = `rotate(180deg)`;\r\n      rotate.left = `rotate(${((percent - 50) * 180) / 50}deg)`;\r\n    }\r\n    let border_color =\r\n      percent < 34 ? \"red\" : percent < 67 ? \"yellow\" : \"#20bd6f\";\r\n    return (\r\n      <div className=\"circleProgressBar\">\r\n        <div className=\"circleProgressBar-outside\">\r\n          <div className=\"circleProgressBar-outside-right\">\r\n            <div\r\n              className=\"circleProgressBar-outside-right-run \"\r\n              style={{\r\n                transform: rotate.right,\r\n                \"--border-color\": border_color,\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"circleProgressBar-outside-left\">\r\n            <div\r\n              className=\"circleProgressBar-outside-left-run\"\r\n              style={{ transform: rotate.left, \"--border-color\": border_color }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n        <div className=\"circleProgressBar-inner\">{this.props.percent}%</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CircleProcessBar } from \"./lib/tool/tool\";\r\n\r\nexport class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trendingDay: false,\r\n    };\r\n  }\r\n  handleToggleTrendind = (x) => {\r\n    this.setState({ trendingDay: x });\r\n  };\r\n  render() {\r\n    // console.log(this.props.popular);\r\n    // console.log(\"poster_path\");\r\n    // console.log(this.props.trending);\r\n    let { trendingDay } = this.state;\r\n    let trending = [];\r\n    trendingDay\r\n      ? (trending = this.props.trending.week)\r\n      : (trending = this.props.trending.day);\r\n    return (\r\n      <div className=\"home\">\r\n        <div className=\"home-backdrop\">\r\n          <div className=\"home-backdrop-header\">\r\n            <h1>Welcome My Page</h1>\r\n            <h2>Thoudsands of movies to discover. Explore now.</h2>\r\n          </div>\r\n          <form className=\"home-backdrop-search\">\r\n            <input type=\"text\" placeholder=\"Search for movie...\"></input>\r\n            <button>Search</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"home-popular\">\r\n          <h2> Top 20 popular movies</h2>\r\n          <div className=\"home-popular-display\">\r\n            {this.props.popular.map((e, i) => {\r\n              let { id, poster_path, vote_average, title, release_date } = e;\r\n              let part_link = id + \"-\" + title.replace(/\\s/g, \"-\");\r\n              // console.log(part_link);\r\n              return (\r\n                <div className=\"movieBanner\" key={i}>\r\n                  <Link\r\n                    to={\"/movie/\" + part_link}\r\n                    key={i}\r\n                    className=\"link-decoration\"\r\n                  >\r\n                    <img src={poster_path} alt={title} />\r\n                    <div className=\"movieBanner-averRate\"></div>\r\n                    <div className=\"movieBanner-title\">\r\n                      <h4>{title}</h4>\r\n                      <h5>{release_date}</h5>\r\n                    </div>\r\n                    <div className=\"wrap-circleProcessBar\">\r\n                      <CircleProcessBar percent={vote_average * 10} />\r\n                    </div>\r\n                  </Link>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"home-trending\">\r\n          <div className=\"home-popular\">\r\n            <div className=\"home-popular-header\">\r\n              <h2> Top 20 trending movies</h2>\r\n              <div className=\"home-popular-header-toggle\">\r\n                <div\r\n                  className=\"bythetime\"\r\n                  onClick={() => this.handleToggleTrendind(false)}\r\n                  style={trendingDay ? { color: \"black\" } : { color: \"white\" }}\r\n                >\r\n                  Today\r\n                </div>\r\n                <div\r\n                  className=\"bythetime\"\r\n                  onClick={() => this.handleToggleTrendind(true)}\r\n                  style={trendingDay ? { color: \"white\" } : { color: \"black\" }}\r\n                >\r\n                  This Week\r\n                </div>\r\n                <div\r\n                  className=\"cover\"\r\n                  style={\r\n                    trendingDay\r\n                      ? { left: \"82px\", width: \"112px\" }\r\n                      : { left: 0, width: \"82px\" }\r\n                  }\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"home-popular-display\">\r\n              {trending.map((e, i) => {\r\n                let { id, poster_path, vote_average, title, release_date } = e;\r\n                let part_link = id + \"-\" + title.replace(/\\s/g, \"-\");\r\n                // console.log(part_link);\r\n                return (\r\n                  <div className=\"movieBanner\" key={i}>\r\n                    <Link\r\n                      to={\"/movie/\" + part_link}\r\n                      key={i}\r\n                      className=\"link-decoration\"\r\n                    >\r\n                      <img src={poster_path} alt={title} />\r\n                      <div className=\"movieBanner-averRate\"></div>\r\n                      <div className=\"movieBanner-title\">\r\n                        <h4>{title}</h4>\r\n                        <h5>{release_date}</h5>\r\n                      </div>\r\n                      <div className=\"wrap-circleProcessBar\">\r\n                        <CircleProcessBar percent={vote_average * 10} />\r\n                      </div>\r\n                    </Link>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport class Collection extends Component {\r\n  render() {\r\n    return <div className=\"collection\"></div>;\r\n  }\r\n}\r\n\r\nexport class FAQ extends Component {\r\n  render() {\r\n    return <div className=\"FAQ\"></div>;\r\n  }\r\n}\r\n","import \"./App.css\";\nimport \"./reset.css\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n// import * as colectionIDs from \"./test.json\";\n// import ReactScrollWheelHandler from \"react-scroll-wheel-handler\";\n/////////////////////////////////////////////////import icon\nimport Logo from \"./../src/images/icon.png\";\n// import { FcFilmReel } from \"react-icons/fc\";\nimport { FiTrendingUp } from \"react-icons/fi\";\nimport {\n  // AiFillCaretDown,\n  // AiFillVideoCamera,\n  AiOutlineSearch,\n  AiOutlineClose,\n} from \"react-icons/ai\";\nimport { FaGithub, FaTwitter, FaLinkedin } from \"react-icons/fa\";\n// import { BsCollectionPlayFill } from \"react-icons/bs\";\n///////////////////////////////////////////////////import library function\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Link,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport film_collection from \"./filmCollection.json\";\nimport { Home, Collection, FAQ } from \"./contentApp\";\n\n// D:\\my work\\web dev\\javascript\\reactjs\\My_project\\offline\\WebPhimClub\\public\\icon_head.png\nconst kindOfLink = {\n  collection: \"Collection\",\n  movie: \"movie\",\n  trending: \"trending\",\n  popular: \"popular\",\n  upcoming: \"upcoming\",\n  toprated: \"toprated\",\n  base_img_link: \"https://image.tmdb.org/t/p/w500\", //w500\n};\nexport const concateString = (kind, id, time) => {\n  const api_key = \"d1ac13b85f1d54e58edbe4543ffee597\";\n  switch (kind) {\n    case kindOfLink.collection:\n      return ` https://api.themoviedb.org/3/collection/${id}?api_key=${api_key}&language=en-US`;\n    // break;\n    case kindOfLink.movie:\n      return ` https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}&language=en-US`;\n    // break;\n    case kindOfLink.trending:\n      return `https://api.themoviedb.org/3/trending/all/${time}?api_key=${api_key}`;\n    case kindOfLink.popular:\n      return `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=en-US&page=1`;\n    case kindOfLink.upcoming:\n      return `https://api.themoviedb.org/3/movie/upcoming?api_key=${api_key}&language=en-US&page=1`;\n    case kindOfLink.toprated:\n      return `https://api.themoviedb.org/3/movie/top_rated?api_key=${api_key}&language=en-US&page=1`;\n    default:\n      break;\n  }\n};\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: [],\n      trending: {\n        day: [],\n        week: [],\n      },\n      popular: [],\n      upcoming: [],\n      nowplaying: [],\n      toprated: [],\n      search: [],\n      genres: [],\n      genre_ids: [],\n    };\n  }\n  componentDidMount() {\n    film_collection.forEach((e) => {\n      // console.log(e.id);\n      this.getAPIMovieArr(kindOfLink.collection, e.id);\n    });\n    this.getAPIMovieArr(kindOfLink.trending, undefined, \"day\");\n    this.getAPIMovieArr(kindOfLink.trending, undefined, \"week\");\n    this.getAPIMovieArr(kindOfLink.popular);\n    this.getAPIMovieArr(kindOfLink.upcoming);\n    this.getAPIMovieArr(kindOfLink.toprated);\n  }\n\n  getAPIMovieArr = async (kind, id, time) => {\n    let url = concateString(kind, id, time);\n    try {\n      const response = await fetch(url);\n      let datafet = await response.json();\n      // console.log(datafet);\n      switch (kind) {\n        case kindOfLink.collection:\n          let { movie } = this.state;\n          for (let film of datafet.parts) {\n            let {\n              id,\n              title,\n              original_title,\n              adult,\n              release_date,\n              poster_path,\n              backdrop_path,\n              overview,\n              vote_average,\n              vote_count,\n              original_language,\n            } = film;\n            poster_path = kindOfLink.base_img_link + poster_path;\n            backdrop_path = kindOfLink.base_img_link + backdrop_path;\n            movie[movie.length] = {\n              id,\n              title,\n              original_title,\n              adult,\n              release_date,\n              poster_path,\n              backdrop_path,\n              overview,\n              vote_average,\n              vote_count,\n              original_language,\n            };\n          }\n          this.setState({ movie: movie });\n          // console.log(this.state.movie);\n          break;\n        case kindOfLink.trending:\n          // console.log(datafet.results);\n          let trending1 = [];\n          datafet.results.forEach((e) => {\n            // console.log(e);\n            let movie = {};\n            let {\n              overview,\n              vote_count,\n              media_type,\n              id,\n              poster_path,\n              genre_ids,\n              vote_average,\n              backdrop_path,\n            } = e;\n            poster_path = kindOfLink.base_img_link + poster_path;\n            backdrop_path = kindOfLink.base_img_link + backdrop_path;\n            if (media_type === \"tv\") {\n              let { name, original_name, first_air_date } = e;\n              let title = name,\n                original_title = original_name,\n                release_date = first_air_date;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            if (media_type === \"movie\") {\n              let { title, original_title, release_date } = e;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            trending1[trending1.length] = movie;\n          });\n          let { trending } = this.state;\n          if (time === \"day\") trending.day = trending1;\n          if (time === \"week\") trending.week = trending1;\n          this.setState({ trending });\n          // console.log(trending1);\n          // console.log(this.state);\n          // console.log(url);\n          break;\n\n        case kindOfLink.popular:\n          // console.log(datafet);\n          let popular1 = [];\n          datafet.results.forEach((e) => {\n            // console.log(e);\n            let movie = {};\n            let {\n              overview,\n              vote_count,\n              media_type,\n              id,\n              poster_path,\n              genre_ids,\n              vote_average,\n              backdrop_path,\n            } = e;\n            poster_path = kindOfLink.base_img_link + poster_path;\n            backdrop_path = kindOfLink.base_img_link + backdrop_path;\n            // console.log(\n            //   overview,\n            //   vote_count,\n            //   media_type,\n            //   id,\n            //   poster_path,\n            //   genre_ids,\n            //   vote_average,\n            //   backdrop_path\n            // );\n            if (media_type === \"tv\") {\n              let { name, original_name, first_air_date } = e;\n              let title = name,\n                original_title = original_name,\n                release_date = first_air_date;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n              console.log(movie);\n            }\n            if (media_type === \"movie\") {\n              let { title, original_title, release_date } = e;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            if (media_type === undefined) {\n              let { title, original_title, release_date } = e;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            // console.log(movie);\n            popular1[popular1.length] = movie;\n          });\n          // let { popular } = this.state;\n          // if (time === \"day\") popular.day = popular1;\n          // if (time === \"week\") popular.week = popular1;\n          this.setState({ popular: popular1 });\n          // console.log(this.state.popular);\n          break;\n\n        case kindOfLink.upcoming:\n          // console.log(datafet);\n          let upcoming1 = [];\n          datafet.results.forEach((e) => {\n            // console.log(e);\n            let movie = {};\n            let {\n              overview,\n              vote_count,\n              media_type,\n              id,\n              poster_path,\n              genre_ids,\n              vote_average,\n              backdrop_path,\n            } = e;\n            poster_path = kindOfLink.base_img_link + poster_path;\n            backdrop_path = kindOfLink.base_img_link + backdrop_path;\n            if (media_type === \"tv\") {\n              let { name, original_name, first_air_date } = e;\n              let title = name,\n                original_title = original_name,\n                release_date = first_air_date;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            if (media_type === \"movie\") {\n              let { title, original_title, release_date } = e;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            if (media_type === undefined) {\n              let { title, original_title, release_date } = e;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            upcoming1[upcoming1.length] = movie;\n          });\n          // let { popular } = this.state;\n          // if (time === \"day\") popular.day = popular1;\n          // if (time === \"week\") popular.week = popular1;\n          this.setState({ upcoming: upcoming1 });\n          // console.log(this.state.upcoming);\n          break;\n\n        case kindOfLink.toprated:\n          // console.log(datafet);\n          let toprated1 = [];\n          datafet.results.forEach((e) => {\n            // console.log(e);\n            let movie = {};\n            let {\n              overview,\n              vote_count,\n              media_type,\n              id,\n              poster_path,\n              genre_ids,\n              vote_average,\n              backdrop_path,\n            } = e;\n            poster_path = kindOfLink.base_img_link + poster_path;\n            backdrop_path = kindOfLink.base_img_link + backdrop_path;\n            if (media_type === \"tv\") {\n              let { name, original_name, first_air_date } = e;\n              let title = name,\n                original_title = original_name,\n                release_date = first_air_date;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            if (media_type === \"movie\") {\n              let { title, original_title, release_date } = e;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            if (media_type === undefined) {\n              let { title, original_title, release_date } = e;\n              movie = {\n                overview,\n                vote_count,\n                media_type,\n                id,\n                poster_path,\n                genre_ids,\n                vote_average,\n                backdrop_path,\n                title,\n                original_title,\n                release_date,\n              };\n            }\n            toprated1[toprated1.length] = movie;\n          });\n          this.setState({ toprated: toprated1 });\n          // console.log(this.state.toprated);\n          break;\n        default:\n          break;\n      }\n    } catch (error) {}\n  };\n\n  render() {\n    let { upcoming, popular, trending } = this.state;\n    // console.log(upcoming);\n    return (\n      <div className=\"app\">\n        <Router>\n          <HeaderApp />\n          <div>\n            <ContentApp trending={trending} popular={popular} />\n          </div>\n          <FooterApp />\n        </Router>\n      </div>\n    );\n  }\n}\n\nclass HeaderApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search_state: false,\n      search_state_check: false,\n      search_keyString: \"\",\n      trending: [\n        \"Nhan\",\n        \"Handsome\",\n        \"Kind\",\n        \"Nhan\",\n        \"Handsome\",\n        \"Kind\",\n        \"Nhan\",\n        \"Handsome\",\n        \"Kind\",\n        \"Nhan\",\n      ],\n      search_icon_suggest: {\n        wait: \"inline-block\",\n        display: \"none\",\n      },\n      header_bar: true,\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"wheel\", this.handleWheelAnywhere, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"wheel\", this.handleWheelAnywhere, true);\n  }\n\n  handleWheelAnywhere = (e) => {\n    if (e.deltaY < 0) {\n      this.setState({\n        search_state_check: false,\n        header_bar: true,\n      });\n    } else if (e.deltaY > 0) {\n      this.setState({\n        search_state_check: false,\n        header_bar: false,\n      });\n    }\n  };\n\n  handleClickSearch = () => {\n    let { search_state } = this.state;\n    this.setState({\n      search_state: !this.state.search_state,\n      search_state_check: false,\n      search_icon_suggest: {\n        display: search_state ? \"inline-block\" : \"none\",\n        wait: search_state ? \"none\" : \"inline-block\",\n      },\n    });\n  };\n\n  headerSuggestAnimationEnd = () => {\n    this.setState({\n      search_state_check: true,\n      search_icon_suggest: {\n        wait: \"none\",\n        display: \"inline-block\",\n      },\n    });\n  };\n\n  updateSearchStateCheck = (x) => {\n    x\n      ? this.setState({\n          search_state_check: false,\n          search_icon_suggest: {\n            wait: \"inline-block\",\n            display: \"none\",\n          },\n        })\n      : this.setState({\n          search_state_check: false,\n          search_icon_suggest: {\n            wait: \"none\",\n            display: \"inline-block\",\n          },\n        });\n  };\n\n  render() {\n    let { search_icon_suggest, search_keyString, search_state_check } =\n      this.state;\n    let { display, wait } = this.state.search_icon_suggest;\n    let { search_state, header_bar } = this.state;\n    return (\n      <div className=\"header\" style={{ top: header_bar ? \"0\" : \"-60px\" }}>\n        <div className=\"header-bar\">\n          <div className=\"\">\n            <Link\n              to=\"/\"\n              name=\"home\"\n              className=\"header-bar-link link-decoration\"\n            >\n              <img src={Logo} alt=\"logo web\" className=\"home\"></img>\n            </Link>\n            <Link to=\"/movie\" className=\"header-bar-link link-decoration\">\n              <span className=\"header-bar-text \">Movie</span>\n            </Link>\n            <Link to=\"/collection\" className=\"header-bar-link link-decoration\">\n              <span className=\"header-bar-text \">Collection</span>\n            </Link>\n            <Link to=\"/FAQ\" className=\"header-bar-link link-decoration\">\n              <span className=\"header-bar-text\">FAQ</span>\n            </Link>\n          </div>\n          <button\n            className=\"header-bar-search\"\n            onClick={this.handleClickSearch}\n          >\n            {search_state ? (\n              <span className=\"header-bar-icon-back\" style={{ color: \"white\" }}>\n                X\n              </span>\n            ) : (\n              <AiOutlineSearch className=\"header-bar-icon-infront\" />\n            )}\n          </button>\n        </div>\n        <HeaderSearchResult\n          search_keyString={search_keyString}\n          search_state_check={search_state_check}\n          display={display}\n          search_icon_suggest={search_icon_suggest}\n          wait={wait}\n          search_state={search_state}\n          headerSuggestAnimationEnd={this.headerSuggestAnimationEnd}\n          trending={this.state.trending}\n          updateSearchStateCheck={this.updateSearchStateCheck}\n        />\n      </div>\n    );\n  }\n}\n\nclass HeaderSearchResult extends Component {\n  state = { search_state_check: 0 };\n  componentDidMount() {\n    document.addEventListener(\"click\", this.handleClickOutside, true);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"click\", this.handleClickOutside, true);\n  }\n\n  handleClickOutside = (e) => {\n    const domNode = ReactDOM.findDOMNode(this);\n\n    if (!domNode || !domNode.contains(e.target)) {\n      this.props.updateSearchStateCheck(false);\n    }\n  };\n\n  handleClickResetSearchResult = () => {\n    this.props.updateSearchStateCheck(true);\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.search_state ? (\n          <div className=\"header-search\">\n            <form className=\"header-search-tool\">\n              <AiOutlineSearch className=\"search-icon\" />\n              <input\n                className=\"header-search-tool-filled\"\n                placeholder=\"search for movie...\"\n                type=\"text\"\n              ></input>\n              <div className=\"close-icon\">\n                <span\n                  className=\"close-icon-wait\"\n                  style={{ display: this.props.wait }}\n                  onAnimationEnd={this.props.headerSuggestAnimationEnd}\n                ></span>\n                <AiOutlineClose\n                  className=\"close-icon-display\"\n                  style={{ display: this.props.display }}\n                  onClick={this.handleClickResetSearchResult}\n                />\n              </div>\n            </form>\n            <div className=\"header-search-result\">\n              {this.props.search_keyString === \"\" ? (\n                <div\n                  style={{\n                    display: this.props.search_state_check ? \"block\" : \"none\",\n                  }}\n                >\n                  <div className=\"header-search-result-trending\">\n                    <FiTrendingUp className=\"trending-icon\" />\n                    <span className=\"trending-text\">Trending</span>\n                  </div>\n                  {this.props.trending.slice(0, 10).map((x, i) => {\n                    return (\n                      <div key={i} className=\"header-search-result-items\">\n                        <AiOutlineSearch className=\"icon\" />\n                        <span className=\"text\">{x}</span>\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : (\n                <div></div>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    );\n  }\n}\n\n//////////////////////////////////////////ContentApp///////////////////////////////////////////////////\nclass ContentApp extends Component {\n  render() {\n    return (\n      <div className=\"contentApp\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home popular={this.props.popular} trending={this.props.trending} />\n          </Route>\n          <Route path=\"/collection\">\n            <Collection />\n          </Route>\n          <Route path=\"FAQ\">\n            <FAQ />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\n////////////////////////////////////footer///////////////////////////////////////////////////////\nconst FooterApp = () => {\n  return (\n    <div className=\"footer\">\n      <div className=\"text\">\n        <h4>My Film CLub</h4>\n      </div>\n      <div className=\"icon\">\n        {/* <IconContext.Provider value={{ backgroungColor: \"#61dbfb\" }}> */}\n        <FaGithub className=\"react-icons\" />\n        <FaTwitter className=\"react-icons\" />\n        <FaLinkedin className=\"react-icons\" />\n        {/* </IconContext.Provider> */}\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n// import { BrowserRouter as Router,Route,Link,Switch, } from 'react-router-dom'\n// import Redirect from \"./test/router/redirect/redirect\";\nimport App from \"./App.js\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}